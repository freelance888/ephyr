subscription Info {
    info {
        publicHost
        title
        deleteConfirmation
        enableConfirmation
        passwordHash
        passwordOutputHash
        googleApiKey
        maxFilesInPlaylist
    }
}

subscription ServerInfo {
    serverInfo {
        cpuUsage
        cpuCores
        ramTotal
        ramFree
        txDelta
        rxDelta
        errorMsg
    }
}

subscription Files {
    files {
        fileId
        name
        state
        error
        downloadState {
            maxProgress
            currentProgress
        }
        streamStat {
            ...streamStat
        }
    }
}

subscription State {
    allRestreams {
        ...restreamBasic
        ...restreamPlaylist
    }
}

subscription TranslationRestream($id: RestreamId!) {
    restream(id: $id) {
        restream {
            ...restreamBasic
            ...restreamPlaylist
        }
        parent {
            restream {
                id
                ...restreamOutputs
            }
            outputId
        }
    }
}

query DvrFiles($id: OutputId!) {
    dvrFiles(id: $id)
}

query ExportRestream($id: RestreamId!) {
    export(ids: [$id])
}

query ExportAllRestreams {
    export
}

mutation Import($restream_id: RestreamId, $replace: Boolean!, $spec: String!) {
    import(restreamId: $restream_id, replace: $replace, spec: $spec)
}

mutation SetRestream(
    $key: RestreamKey!
    $url: InputSrcUrl
    $label: Label
    $id: RestreamId
    $backup_inputs: [BackupInput!]
    $with_hls: Boolean!
    $file_id: FileId
    $max_files_in_playlist: UNumber
) {
    setRestream(
        key: $key
        src: $url
        label: $label
        backupInputs: $backup_inputs
        fileId: $file_id
        withHls: $with_hls
        id: $id
        maxFilesInPlaylist: $max_files_in_playlist
    )
}

mutation DownloadFile($fileId: FileId!) {
    downloadFile(fileId: $fileId)
}

mutation RemoveRestream($id: RestreamId!) {
    removeRestream(id: $id)
}

mutation SetPlaylist($restreamId: RestreamId!, $fileIds: [String!]!) {
    setPlaylist(restreamId: $restreamId, playlist: $fileIds)
}

mutation PlayFileFromPlaylist($restreamId: RestreamId!, $file_id: String!) {
    playFileFromPlaylist(restreamId: $restreamId, fileId: $file_id)
}

mutation StopPlayingFileFromPlaylist($restreamId: RestreamId!) {
    stopPlayingFileFromPlaylist(restreamId: $restreamId)
}

mutation GetPlaylistFromGdrive($id: RestreamId!, $folder_id: String!) {
    getPlaylistFromGdrive(restreamId: $id, folderId: $folder_id)
}

mutation EnableInput($restream_id: RestreamId!, $input_id: InputId!) {
    enableInput(id: $input_id, restreamId: $restream_id)
}

mutation DisableInput($restream_id: RestreamId!, $input_id: InputId!) {
    disableInput(id: $input_id, restreamId: $restream_id)
}

mutation MoveInputInDirection(
    $restream_id: RestreamId!
    $input_id: InputId!
    $direction: Direction!
) {
    moveInputInDirection(
        id: $input_id
        restreamId: $restream_id
        direction: $direction
    )
}

mutation SetEndpointLabel(
    $restream_id: RestreamId!
    $input_id: InputId!
    $endpoint_id: EndpointId!
    $label: Label!
) {
    setEndpointLabel(
        id: $input_id
        restreamId: $restream_id
        endpointId: $endpoint_id
        label: $label
    )
}

mutation SetOutput(
    $restream_id: RestreamId!
    $url: OutputDstUrl!
    $label: Label
    $preview_url: Url
    $mixins: [MixinSrcUrl!]!
    $id: OutputId
) {
    setOutput(
        restreamId: $restream_id
        dst: $url
        label: $label
        previewUrl: $preview_url
        mixins: $mixins
        id: $id
    )
}

mutation RemoveOutput($restream_id: RestreamId!, $output_id: OutputId!) {
    removeOutput(restreamId: $restream_id, id: $output_id)
}

mutation EnableOutput($restream_id: RestreamId!, $output_id: OutputId!) {
    enableOutput(restreamId: $restream_id, id: $output_id)
}

mutation DisableOutput($restream_id: RestreamId!, $output_id: OutputId!) {
    disableOutput(restreamId: $restream_id, id: $output_id)
}

mutation EnableAllOutputs($restream_id: RestreamId!) {
    enableAllOutputs(restreamId: $restream_id)
}

mutation DisableAllOutputs($restream_id: RestreamId!) {
    disableAllOutputs(restreamId: $restream_id)
}

mutation EnableAllOutputsOfRestreams {
    enablesAllOutputsOfRestreams
}

mutation DisableAllOutputsOfRestreams {
    disableAllOutputsOfRestreams
}

mutation TuneVolume(
    $restream_id: RestreamId!
    $output_id: OutputId!
    $mixin_id: MixinId
    $level: VolumeLevel!
    $muted: Boolean!
) {
    tuneVolume(
        restreamId: $restream_id
        outputId: $output_id
        mixinId: $mixin_id
        level: $level
        muted: $muted
    )
}

mutation TuneDelay(
    $restream_id: RestreamId!
    $output_id: OutputId!
    $mixin_id: MixinId!
    $delay: Delay!
) {
    tuneDelay(
        restreamId: $restream_id
        outputId: $output_id
        mixinId: $mixin_id
        delay: $delay
    )
}
mutation TuneSidechain(
    $restream_id: RestreamId!
    $output_id: OutputId!
    $mixin_id: MixinId!
    $sidechain: Boolean!
) {
    tuneSidechain(
        restreamId: $restream_id
        outputId: $output_id
        mixinId: $mixin_id
        sidechain: $sidechain
    )
}

mutation RemoveDvrFile($path: String!) {
    removeDvrFile(path: $path)
}

mutation SetPassword($new: String, $old: String, $kind: PasswordKind!) {
    setPassword(new: $new, old: $old, kind: $kind)
}

mutation SetSettings(
    $title: String
    $deleteConfirmation: Boolean!
    $enableConfirmation: Boolean!
    $googleApiKey: String
    $maxFilesInPlaylist: UNumber
) {
    setSettings(
        title: $title
        deleteConfirmation: $deleteConfirmation
        enableConfirmation: $enableConfirmation
        googleApiKey: $googleApiKey
        maxFilesInPlaylist: $maxFilesInPlaylist
    )
}

fragment restreamBasic on Restream {
    id
    key
    label
    input {
        id
        key
        endpoints {
            id
            kind
            status
            label
            fileId
        }
        src {
            ... on RemoteInputSrc {
                url
                label
            }
            ... on FailoverInputSrc {
                inputs {
                    id
                    key
                    endpoints {
                        id
                        kind
                        status
                        label
                        fileId
                        streamStat {
                            ...streamStat
                        }
                    }
                    src {
                        ... on RemoteInputSrc {
                            url
                            label
                        }
                    }
                    enabled
                }
            }
        }
        enabled
    }
    ...restreamOutputs
    maxFilesInPlaylist
}

fragment restreamPlaylist on Restream {
    playlist {
        currentlyPlayingFile {
            fileId
            name
            wasPlayed
        }
        queue {
            fileId
            name
            wasPlayed
        }
    }
}

fragment restreamOutputs on Restream {
    outputs {
        id
        dst
        label
        previewUrl
        volume {
            level
            muted
        }
        mixins {
            id
            src
            volume {
                level
                muted
            }
            delay
            sidechain
        }
        enabled
        status
    }
}

fragment streamStat on StreamStatistics {
    audioChannelLayout
    audioChannels
    audioSampleRate
    audioCodecName
    videoCodecName
    videoRFrameRate
    videoHeight
    videoWidth
    bitRate
    error
}
