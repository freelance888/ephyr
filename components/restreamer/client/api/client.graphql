subscription Info {
    info {
        publicHost
        title
        deleteConfirmation
        enableConfirmation
        passwordHash
        passwordOutputHash
        googleApiKey
    }
}

subscription ServerInfo {
    serverInfo {
        cpuUsage
        ramTotal
        ramFree
        txDelta
        rxDelta
        errorMsg
    }
}

subscription Files {
    files {
        fileId
        name
        downloadState {
            maxProgress
            currentProgress
        }
        state
    }
}

subscription State {
    allRestreams {
        id
        key
        label
        input {
            id
            key
            endpoints {
                id
                kind
                status
                label
                fileId
            }
            src {
                ... on RemoteInputSrc {
                    url
                    label
                }
                ... on FailoverInputSrc {
                    inputs {
                        id
                        key
                        endpoints {
                            id
                            kind
                            status
                            label
                            fileId
                        }
                        src {
                            ... on RemoteInputSrc {
                                url
                                label
                            }
                        }
                        enabled
                    }
                }
            }
            enabled
        }
        outputs {
            id
            dst
            label
            previewUrl
            volume {
                level
                muted
            }
            mixins {
                id
                src
                volume {
                    level
                    muted
                }
                delay
            }
            enabled
            status
        }
        playlist {
            currentlyPlayingFile {
                fileId
                name
                wasPlayed
            }
            queue {
                fileId
                name
                wasPlayed
            }
        }
    }
}

subscription Restream($id: RestreamId!) {
    restream(id: $id) {
        id
        key
        label
        input {
            id
            key
            endpoints {
                id
                kind
                status
                label
                fileId
            }
            src {
                ... on RemoteInputSrc {
                    url
                    label
                }
                ... on FailoverInputSrc {
                    inputs {
                        id
                        key
                        endpoints {
                            id
                            kind
                            status
                            label
                            fileId
                        }
                        src {
                            ... on RemoteInputSrc {
                                url
                                label
                            }
                        }
                        enabled
                    }
                }
            }
            enabled
        }
        outputs {
            id
            dst
            label
            previewUrl
            volume {
                level
                muted
            }
            mixins {
                id
                src
                volume {
                    level
                    muted
                }
                delay
            }
            enabled
            status
        }
        playlist {
            currentlyPlayingFile {
                fileId
                name
                wasPlayed
            }
            queue {
                fileId
                name
                wasPlayed
            }
        }
    }
}

query DvrFiles($id: OutputId!) {
    dvrFiles(id: $id)
}

query ExportRestream($id: RestreamId!) {
    export(ids: [$id])
}

query ExportAllRestreams {
    export
}

mutation Import($restream_id: RestreamId, $replace: Boolean!, $spec: String!) {
    import(restreamId: $restream_id, replace: $replace, spec: $spec)
}

mutation SetRestream(
    $key: RestreamKey!
    $url: InputSrcUrl
    $label: Label
    $id: RestreamId
    $with_backup: Boolean
    $backup_url: InputSrcUrl
    $with_hls: Boolean
    $file_id: String
) {
    setRestream(
        key: $key
        src: $url
        label: $label
        withBackup: $with_backup
        backupSrc: $backup_url
        fileId: $file_id
        withHls: $with_hls
        id: $id
    )
}

mutation RemoveRestream($id: RestreamId!) {
    removeRestream(id: $id)
}

mutation SetPlaylist($id: RestreamId!, $playlist: [String]!) {
    setPlaylist(restreamId: $input_id, playlist: $playlist)
}

mutation PlayFileFromPlaylist($id: RestreamId!, $file_id: String!) {
    playFileFromPlaylist(restreamId: $id, fileId: $file_id)
}

mutation GetPlaylistFromDrive($id: RestreamId!, $folder_id: String!) {
    getPlaylistFromDrive(restreamId: $id, folderId: $folder_id)
}

mutation EnableInput($restream_id: RestreamId!, $input_id: InputId!) {
    enableInput(id: $input_id, restreamId: $restream_id)
}

mutation DisableInput($restream_id: RestreamId!, $input_id: InputId!) {
    disableInput(id: $input_id, restreamId: $restream_id)
}

mutation SetEndpointLabel(
    $restream_id: RestreamId!
    $input_id: InputId!
    $endpoint_id: EndpointId!
    $label: String!
) {
    changeEndpointLabel(
        id: $input_id
        restreamId: $restream_id
        endpointId: $endpoint_id
        label: $label
    )
}

mutation SetOutput(
    $restream_id: RestreamId!
    $url: OutputDstUrl!
    $label: Label
    $preview_url: Url
    $mixins: [MixinSrcUrl!]
    $id: OutputId
) {
    setOutput(
        restreamId: $restream_id
        dst: $url
        label: $label
        previewUrl: $preview_url
        mixins: $mixins
        id: $id
    )
}

mutation RemoveOutput($restream_id: RestreamId!, $output_id: OutputId!) {
    removeOutput(restreamId: $restream_id, id: $output_id)
}

mutation EnableOutput($restream_id: RestreamId!, $output_id: OutputId!) {
    enableOutput(restreamId: $restream_id, id: $output_id)
}

mutation DisableOutput($restream_id: RestreamId!, $output_id: OutputId!) {
    disableOutput(restreamId: $restream_id, id: $output_id)
}

mutation EnableAllOutputs($restream_id: RestreamId!) {
    enableAllOutputs(restreamId: $restream_id)
}

mutation DisableAllOutputs($restream_id: RestreamId!) {
    disableAllOutputs(restreamId: $restream_id)
}

mutation EnableAllOutputsOfRestreams {
    enablesAllOutputsOfRestreams
}

mutation DisableAllOutputsOfRestreams {
    disableAllOutputsOfRestreams
}

mutation TuneVolume(
    $restream_id: RestreamId!
    $output_id: OutputId!
    $mixin_id: MixinId
    $level: VolumeLevel!
    $muted: Boolean!
) {
    tuneVolume(
        restreamId: $restream_id
        outputId: $output_id
        mixinId: $mixin_id
        level: $level
        muted: $muted
    )
}

mutation TuneDelay(
    $restream_id: RestreamId!
    $output_id: OutputId!
    $mixin_id: MixinId!
    $delay: Delay!
) {
    tuneDelay(
        restreamId: $restream_id
        outputId: $output_id
        mixinId: $mixin_id
        delay: $delay
    )
}

mutation RemoveDvrFile($path: String!) {
    removeDvrFile(path: $path)
}

mutation SetPassword($new: String, $old: String, $kind: PasswordKind!) {
    setPassword(new: $new, old: $old, kind: $kind)
}

mutation SetSettings(
    $title: String
    $deleteConfirmation: Boolean!
    $enableConfirmation: Boolean!
    $googleApiKey: String
) {
    setSettings(
        title: $title
        deleteConfirmation: $deleteConfirmation
        enableConfirmation: $enableConfirmation
        googleApiKey: $googleApiKey
    )
}
