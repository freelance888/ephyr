#!/bin/bash

# This script automates the process of joining a new worker node to a Docker Swarm cluster.
# It performs the following tasks:
# 1. Updates package lists and installs Docker.
# 2. Joins the worker node to the Swarm manager using the provided Swarm manager token and IP address.
# 3. Upgrades system packages if required, based on the `WITH_INITIAL_UPGRADE` variable.
# 4. Sets up firewall rules using UFW (Uncomplicated Firewall) to allow specified IP addresses and ports for communication.

# Required arguments:
# 1. SWARM_MANAGER_TOKEN: The token generated by the Docker Swarm manager node, necessary for a worker node to join the cluster.
# 2. SWARM_MANAGER_IP_ADDRESS: The IP address of the Docker Swarm manager node.
# Optional environment variables:
# 1. WITH_INITIAL_UPGRADE: Set to "1" if a full system update is required before installing Docker (default: "0").
# 2. ALLOWED_IPS: A space-separated list of allowed IP addresses for firewall rules (default: "*", which allows all IPs).

# Usage with required arguments only:
# ./join-swarm-manager.sh <SWARM_MANAGER_TOKEN> <SWARM_MANAGER_IP_ADDRESS>

# Usage with optional environment variables:
# WITH_INITIAL_UPGRADE=1 ALLOWED_IPS="192.168.1.1 192.168.1.2" ./join-swarm-manager.sh <SWARM_MANAGER_TOKEN> <SWARM_MANAGER_IP_ADDRESS>

set -e

SWARM_MANAGER_TOKEN=$1
SWARM_MANAGER_IP_ADDRESS=$2

# Check if SWARM_MANAGER_TOKEN and SWARM_MANAGER_IP_ADDRESS are provided
if [ -z "$1" ] || [ -z "$2" ]; then
  echo "Error: SWARM_MANAGER_TOKEN and SWARM_MANAGER_IP_ADDRESS must be provided."
  echo "Usage: ./join-swarm-manager.sh <SWARM_MANAGER_TOKEN> <SWARM_MANAGER_IP_ADDRESS>"
  exit 1
fi

function update_and_install_docker() {
  apt-get -qy update
  curl -sL https://get.docker.com | bash -s
}

function join_swarm_manager() {
  docker swarm join --availability "pause" \
    --token "${SWARM_MANAGER_TOKEN}" "${SWARM_MANAGER_IP_ADDRESS}:2377"
}

function upgrade_if_required() {
    # If provider require full update before install (Selectel for example)
    local WITH_INITIAL_UPGRADE="${WITH_INITIAL_UPGRADE:-0}"
    if [ "$WITH_INITIAL_UPGRADE" == "1" ]; then
        DEBIAN_FRONTEND=noninteractive \
            apt-get -qy -o "Dpkg::Options::=--force-confdef" \
                        -o "Dpkg::Options::=--force-confold" upgrade
    fi
}

function setup_firewall_rules() {
  # If ALLOWED_IPS is not set, use an empty array to allow all IPs
  local ALLOWED_IPS=(${ALLOWED_IPS:-"*"})
  local ALLOWED_PORTS=(
                # HTTP & HTTPS
                "80" "8000" "443"
                # RTMP
                "1935"
                # OpenSpeedtest web
                "3000"
                # Docker swarm worker nodes
                "7946" "4789"
  )

  # Open default ports
  apt-get -yq install ufw
  ufw --force reset

  ufw allow 22
  ufw default deny incoming
  ufw default allow outgoing

  if [ "${ALLOWED_IPS}" == "*" ]; then
    for port in "${ALLOWED_PORTS[@]}"; do
      ufw allow "${port}"
    done
  else
    for ip in "${ALLOWED_IPS[@]}"; do
      for port in "${ALLOWED_PORTS[@]}"; do
        ufw allow from "$ip" to any port "$port"
      done
    done
  fi
  ufw --force enable
}

#################### SETUP ####################
EPHYR_CONTAINER_NAME="ephyr-restreamer"
EPHYR_CONFIG_DIR="/var/lib/${EPHYR_CONTAINER_NAME}"
EPHYR_CONFIG_SRS_PATH="${EPHYR_CONFIG_DIR}/srs.conf"
EPHYR_CONFIG_STATE_PATH="${EPHYR_CONFIG_DIR}/state.json"
EPHYR_WWW_DIR="/var/www/${EPHYR_CONTAINER_NAME}"

# Create required dir and files
mkdir -p $EPHYR_CONFIG_DIR
mkdir -p $EPHYR_WWW_DIR
touch $EPHYR_CONFIG_STATE_PATH
touch $EPHYR_CONFIG_SRS_PATH

# The order of execution is matters here
update_and_install_docker
upgrade_if_required
setup_firewall_rules
join_swarm_manager